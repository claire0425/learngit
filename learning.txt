#mkdir a direction and init to be a repository
	git init
#to add file and commit
	git add <file>
	git commit -m "readable txt"
#to check the status
	git status
#to check the difference:
	git diff
#change the version to "HEAD^" or to "commit_id"
	git reset --hard commit_id
#check the history of commit
	git log
#check the history of usr's command
	git reflog
#to rm the modify of workspace
	git checkout -- file
#to rm the modify of staged
	git reset HEAD <file> 
	git checkout -- file
#recover the commited file to workspace
	git checkout -- file
#to rm the file
	git rm <file>
#to relate with remote repo
	git remote add origin git@server-name(github.com):path(claire0425)/repo-name(learngit).git
#to push the branch or new modify
	git push (-u) origin master
#to clone the repo to local
	git clone git@github.com:claire0425/gitskill.git
#check the branches
	git branch
#to creat a branch
	git branch <name>
#change the branch
	git checkout <name>
#creat and change the branch
	git checkout -b <name>
#combine the branches
	git merge <name>
#rm the branch
	git branch -d <name>
#check the graph of combine
	git log --graph
#interrup and protect the workspace to fix bug on master	git stage
	git stage list
	git status
	git checkout master
	.......fix bug on master
	git checkout dev
	git checkout . ### needed?
	git status
	git stage list
	git stage pop/git stage apply stash@{0} 
	git stage clear/drop
#disert a unmerged branch
	git branch -D <branch name>

	

